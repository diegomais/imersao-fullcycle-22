services:
  anti-fraud-app:
    image: mcr.microsoft.com/devcontainers/typescript-node:1-22-bookworm
    command: sleep infinity
    container_name: anti-fraud-app
    volumes:
      - .:/workspace:cached
    ports:
      - "3000:3000"
    depends_on:
      - anti-fraud-db

  anti-fraud-db:
    image: postgres:17-alpine
    container_name: anti-fraud-db
    environment:
      - POSTGRES_USER=anti_fraud_user
      - POSTGRES_PASSWORD=anti_fraud_pass
      - POSTGRES_DB=anti_fraud_db
    ports:
      - "5433:5432"
    volumes:
      - anti-fraud-db-data:/var/lib/postgresql/data

  gateway-app:
    image: mcr.microsoft.com/devcontainers/go:1-1.24-bookworm
    command: sleep infinity
    container_name: gateway-app
    environment:
      - KAFKA_BROKER=kafka:9092
      - KAFKA_CONSUMER_GROUP_ID=gateway-group
      - KAFKA_CONSUMER_TOPIC=transactions_result
      - KAFKA_PRODUCER_TOPIC=transactions_pending
    volumes:
      - .:/workspace:cached
    ports:
      - "8080:8080"
    depends_on:
      - gateway-db

  gateway-db:
    image: postgres:17-alpine
    container_name: gateway-db
    environment:
      - POSTGRES_USER=gateway_user
      - POSTGRES_PASSWORD=gateway_pass
      - POSTGRES_DB=gateway_db
    ports:
      - "5432:5432"
    volumes:
      - gateway-db-data:/var/lib/postgresql/data

  kafka:
    image: confluentinc/cp-server:7.9.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_NODE_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: kafka-topics --bootstrap-server kafka:29092 --list
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  kafka-init:
    image: confluentinc/cp-server:7.9.0
    container_name: kafka-init
    depends_on:
      kafka:
        condition: service_healthy
    command: >
      bash -c "
        echo 'Starting topic creation...' &&
        kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic transactions_pending --partitions 1 --replication-factor 1 &&
        kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic transactions_result --partitions 1 --replication-factor 1 &&
        echo 'Topics created successfully!'"

volumes:
  anti-fraud-db-data:
  gateway-db-data:
